---
import AnimateText from "../components/AnimateText.astro";
import WelcomePresentation from "../sections/WelcomePresentation.astro";

import WelcomeImageSmall from "../assets/IMG 9 - Formato Small.png";

import Ornament1Image from "../assets/IMG 5.png";
import Ornament2Image from "../assets/IMG 6.png";
import Ornament3Image from "../assets/IMG 7.png";
import Ornament4Image from "../assets/IMG 8.png";

import { Image } from "astro:assets";
---

<div class="sticky-parent pt-24 md:sticky md:top-0 md:-z-[20] md:pt-0">
  <WelcomePresentation />
</div>
<div
  class="sticky top-0 -z-[10] h-[250svh] w-full bg-[#1672F7] text-center text-5xl leading-tight text-white md:text-7xl"
>
  <div class="sticky top-0 isolate grid h-svh place-items-center">
    <h3>
      <AnimateText
        textList={[
          "And yet fiscal fixes can",
          "unlock untold millions more",
          "for development priorities.",
        ]}
        mobileTextList={[
          "And yet fiscal",
          "fixes can unlock",
          "untold millions",
          "more for",
          "development",
          "priorities.",
        ]}
      />
    </h3>

    <div
      class="ornaments bg-red absolute inset-0 m-auto max-h-[800px] max-w-7xl [&>.ornament-item]:absolute [&_img]:relative [&_img]:size-32 md:[&_img]:size-44 3xl:[&_img]:size-60"
    >
      <div class="ornament-item -top-16 left-0 right-0 md:right-auto md:top-4">
        <Image class="mx-auto" src={Ornament1Image} alt={"Ornament"} />
      </div>
      <div class="ornament-item right-0 top-16 hidden md:block">
        <Image class="scale-75" src={Ornament3Image} alt={"Ornament"} />
      </div>
      <div class="ornament-item bottom-4 left-24 hidden md:block">
        <Image class="scale-90" src={Ornament2Image} alt={"Ornament"} />
      </div>
      <div
        class="ornament-item bottom-8 left-0 right-0 md:bottom-0 md:left-auto md:right-16"
      >
        <Image
          class="mx-auto -scale-x-100"
          src={Ornament4Image}
          alt={"Ornament"}
        />
      </div>
    </div>
  </div>
</div>
<section id="welcome-to-fiscal-space" class="bg-[#0128A2]">
  <div class="min-h-[200svh]">
    <div
      class="sticky top-0 flex min-h-svh flex-col items-center justify-center py-40 leading-tight tracking-tighter"
    >
      <h2 class="text-center text-6xl font-bold text-[#02B5D1] md:text-[135px]">
        <AnimateText
          textList={["Welcome to", "The Fiscal Space"]}
          mobileTextList={["Welcome to", "THE FISCAL", "SPACE"]}
        />
      </h2>
    </div>
  </div>

  <div
    class="mx-auto grid max-w-7xl gap-x-20 gap-y-10 px-6 pb-16 md:grid-cols-2 3xl:relative"
  >
    <div
      class="row-start-2 size-full rounded-3xl md:sticky md:top-0 md:row-start-1 md:h-fit"
    >
      <Image
        class="size-full object-contain object-top"
        alt="Welcome to the fiscal space"
        src={WelcomeImageSmall}
      />
    </div>
    <div
      class="grid h-fit max-w-[50ch] gap-y-4 self-center text-base text-white [grid-auto-rows:auto] 3xl:text-lg"
    >
      <p>
        The Fiscal Space site is a place for Funders (and others) interested in
        sectors like climate, education, health, and poverty reduction that have
        increasingly looked to learn about fiscal policy as a for long-term
        solution, including in sectors like climate, education, health, and
        poverty reduction that have increasingly lookeds. We seek to:
      </p>

      <ul class="ml-6 grid list-disc gap-y-4">
        <li>
          Raise awareness of the importance of investing in fiscal issues,
          including by funders of the Sustainable Development Goals (SDGs).
        </li>
        <li>
          Discuss how funders can use their grants, voice, and other tools.
        </li>
        <li>
          Showcase resources by TAI and other stakeholders on the landscape of
          funding, evidence of impact, case studies, and current news.
        </li>
      </ul>
    </div>
  </div>
</section>

<script>
  import { animate, inView, scroll, stagger } from "motion";

  const cleanupFunctions: VoidFunction[] = [];

  initEventListeners();
  document.addEventListener("astro:after-swap", initEventListeners);
  document.addEventListener("astro:before-preparation", () => {
    cleanupFunctions.forEach((fn) => fn());
    cleanupFunctions.length = 0;
  });

  function initEventListeners() {
    const ornaments = document.querySelector(".ornaments") as HTMLElement;
    const ornamentsItems = ornaments.querySelectorAll(
      ".ornament-item"
    ) as NodeListOf<HTMLElement>;
    const ornamentsImages = ornaments.querySelectorAll("img");

    ornamentsImages.forEach((image) => {
      image.style.opacity = "0";
    });

    const inViewCallback = inView(
      ornaments,
      () => {
        animate(
          ornamentsImages,
          { opacity: [0, 1], filter: ["blur(10px)", "blur(0px)"] },
          {
            delay: stagger(window.innerWidth < 768 ? 0 : 0.2),
            ease: "circInOut",
          }
        );

        return () =>
          animate(ornamentsImages, {
            opacity: [1, 0],
            filter: ["blur(0px)", "blur(10px)"],
          });
      },
      {
        amount: 0.5,
      }
    );

    const scrollMultipliers = [-200, -1100, -1000, -400];

    const scrollOffsets = [100, 290, 200, 60];

    scroll((progress: number) => {
      ornamentsItems.forEach((item, index) => {
        item.style.transform = `translateY(${progress * scrollMultipliers[index] + scrollOffsets[index]}px)`;
      });
    });

    cleanupFunctions.push(inViewCallback);
  }
</script>
