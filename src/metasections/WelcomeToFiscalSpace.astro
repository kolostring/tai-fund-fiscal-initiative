---
import AnimateText from "../components/AnimateText.astro";
import WelcomePresentation from "../sections/WelcomePresentation.astro";
import ArrowIcon from "../assets/Arrow.svg?raw";
import Card from "../components/Card.astro";

import WelcomeImage from "../assets/IMG 9.png";

import Resource1Image from "../assets/IMG 10.png";
import Resource2Image from "../assets/IMG 11.png";
import Resource3Image from "../assets/IMG 12.png";

import Ornament1Image from "../assets/IMG 5.png";
import Ornament2Image from "../assets/IMG 6.png";
import Ornament3Image from "../assets/IMG 7.png";
import Ornament4Image from "../assets/IMG 8.png";

import { Image } from "astro:assets";
---

<div class="sticky-parent pt-24 md:sticky md:top-0 md:-z-[20] md:pt-0">
  <WelcomePresentation />
</div>
<div
  class="sticky top-0 -z-[10] h-[250svh] w-full bg-[#1672F7] text-center text-5xl leading-tight text-white md:text-7xl"
>
  <div class="sticky top-0 isolate grid h-svh place-items-center">
    <h3>
      <AnimateText
        textList={[
          "And yet fiscal fixes can",
          "unlock untold millions more",
          "for development priorities.",
        ]}
        mobileTextList={[
          "And yet fiscal",
          "fixes can unlock",
          "untold millions",
          "more for",
          "development",
          "priorities.",
        ]}
      />
    </h3>

    <div
      class="ornaments absolute inset-0 m-auto max-h-[800px] max-w-7xl [&>.ornament-item]:absolute [&_img]:relative [&_img]:size-44 3xl:[&_img]:size-60"
    >
      <div class="ornament-item top-4">
        <Image class="" src={Ornament1Image} alt={"Ornament"} />
      </div>
      <div class="ornament-item right-0 top-16">
        <Image class="scale-75" src={Ornament3Image} alt={"Ornament"} />
      </div>
      <div class="ornament-item bottom-4 left-24">
        <Image class="scale-90" src={Ornament2Image} alt={"Ornament"} />
      </div>
      <div class="ornament-item bottom-0 right-16">
        <Image class="-scale-x-100" src={Ornament4Image} alt={"Ornament"} />
      </div>
    </div>
  </div>
</div>
<section class="bg-[#0128A2]">
  <div class="min-h-[200svh]">
    <div
      class="sticky top-0 flex min-h-svh flex-col items-center justify-center py-40 leading-tight tracking-tighter"
    >
      <h2 class="text-center text-6xl font-bold text-[#02B5D1] md:text-[135px]">
        <AnimateText
          textList={["Welcome to", "The Fiscal Space:"]}
          mobileTextList={["Welcome to", "THE FISCAL", "SPACE:"]}
        />
      </h2>
    </div>
  </div>

  <div
    class="mx-auto grid max-w-7xl gap-x-20 gap-y-10 px-6 pb-16 md:grid-cols-2 3xl:relative"
  >
    <div
      class="row-start-2 size-full rounded-3xl md:row-start-1 3xl:sticky 3xl:top-0 3xl:h-fit"
    >
      <Image
        class="size-full object-contain object-top"
        alt="Welcome to the fiscal space"
        src={WelcomeImage}
      />
    </div>
    <div
      class="grid gap-y-6 text-base text-white [grid-auto-rows:auto] 3xl:text-lg"
    >
      <p>
        It is past time to address the fiscal blindspot and scale up support for
        more sustainable public financing that can better serve development
        needs. In 2025, the 4th International Conference on Financing for
        Development (FfD4) will set the development finance agenda for the next
        decade. Decisions will impact countries’ ability to invest in
        development and climate responses. Thus, TAI set up a Fund Fiscal
        project to increase funders’ investment and engagement in fiscal issues.
        We and focused on philanthropies and support to civil society based on
        given our needs assessment.
      </p>

      <a
        href="#"
        class="grid grid-cols-[1fr_auto] items-center rounded-3xl bg-[#1672F7] px-12 py-6 text-xl 3xl:text-2xl"
      >
        <span class="block max-w-[25ch] text-pretty">
          4th International Conference on Financing for Development
        </span>
        <div
          class="flex aspect-square h-12 rounded-full text-white *:size-full first:[&_path]:stroke-[#02B4D0] [&_svg]:fill-[#02B4D0]"
        >
          <Fragment set:html={ArrowIcon} />
        </div>
      </a>

      <a
        href="#"
        class="grid grid-cols-[1fr_auto] items-center rounded-3xl bg-[#1672F7] px-12 py-6 text-xl 3xl:text-2xl"
      >
        <span class="block max-w-[25ch] text-pretty">
          Expanding Funding and Commitment to Transparency and Participation in
          Fiscal Policy
        </span>
        <div
          class="flex aspect-square h-12 rounded-full text-white *:size-full first:[&_path]:stroke-[#02B4D0] [&_svg]:fill-[#02B4D0]"
        >
          <Fragment set:html={ArrowIcon} />
        </div>
      </a>

      <p class="">
        As part of the Fund Fiscal project, the Fiscal Space site is a place for
        fFunders (and others) interested in sectors like climate, education,
        health, and poverty reduction that have increasingly looked to learn
        about fiscal policy as a for long-term solution, including in sectors
        like climate, education, health, and poverty reduction that have
        increasingly lookeds. We seek to:
      </p>

      <ul class="ml-8 grid list-disc gap-y-4">
        <li>
          Raise awareness of the importance of investing in fiscal issues,
          including by funders of the Sustainable Development Goals (SDGs).
        </li>
        <li>
          Discuss how funders can use their grants, voice, and other tools.
        </li>
        <li>
          Showcase resources by TAI and other stakeholders on the landscape of
          funding, evidence of impact, case studies, and current news.
        </li>
      </ul>
    </div>
  </div>
</section>
<div class="bg-[#0128A2] md:sticky md:top-0">
  <div
    class="grid place-content-center gap-x-16 gap-y-16 pb-20 md:sticky md:top-0 md:h-svh md:pb-0"
  >
    <h3 class="text-center text-5xl font-semibold text-white">
      <AnimateText
        textList={["Philanthropists on Fiscal"]}
        mobileTextList={["Philanthropists on", "Fiscal"]}
      />
    </h3>
    <ul class="mx-auto grid max-w-7xl list-none gap-8 px-6 md:grid-cols-3">
      {
        (
          [
            [
              "#",
              Resource1Image,
              "Debt is dragging down the developing world by Mark Suzman, CEO of the Bill and Melinda Gates Foundation.",
            ],
            [
              "#",
              Resource2Image,
              "Why 2025 could be a ‘Bridge year’ for the global south by Kalpana Kochhar.",
            ],
            [
              "#",
              Resource3Image,
              "Philanthropy’s tax blind spot by Savior Mwambwa of Open Society Foundations and Michael Jarvis of TAI.",
            ],
          ] as [string, ImageMetadata | undefined, string][]
        ).map(([href, image, title]) => {
          return <Card href={href} image={image} title={title} />;
        })
      }
    </ul>
  </div>

  <div class="md:h-svh">
    <!-- THIS IS FOR DELAYED SCROLL -->
  </div>
</div>

<script>
  import { animate, inView, scroll, stagger } from "motion";

  const cleanupFunctions: VoidFunction[] = [];

  initEventListeners();
  document.addEventListener("astro:after-swap", initEventListeners);
  document.addEventListener("astro:before-preparation", () => {
    cleanupFunctions.forEach((fn) => fn());
    cleanupFunctions.length = 0;
  });

  function initEventListeners() {
    const ornaments = document.querySelector(".ornaments") as HTMLElement;
    const ornamentsItems = ornaments.querySelectorAll(
      ".ornament-item"
    ) as NodeListOf<HTMLElement>;
    const ornamentsImages = ornaments.querySelectorAll("img");

    ornamentsImages.forEach((image) => {
      image.style.opacity = "0";
    });

    const inViewCallback = inView(
      ornaments,
      () => {
        animate(
          ornamentsImages,
          { opacity: [0, 1], filter: ["blur(10px)", "blur(0px)"] },
          { delay: stagger(0.1), ease: "circInOut" }
        );

        return () =>
          animate(ornamentsImages, {
            opacity: [1, 0],
            filter: ["blur(0px)", "blur(10px)"],
          });
      },
      {
        amount: 0.5,
      }
    );

    const scrollMultipliers = [-200, -1100, -1000, -400];

    const scrollOffsets = [100, 290, 200, 60];

    scroll((progress: number) => {
      ornamentsItems.forEach((item, index) => {
        item.style.transform = `translateY(${progress * scrollMultipliers[index] + scrollOffsets[index]}px)`;
      });
    });

    cleanupFunctions.push(inViewCallback);
  }
</script>
